dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
plot(main = "Complete Linkage")
dist.spotify <- spotify %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=3)
spotify %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=3)
plot(main = "Complete Linkage")
spotify %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=3) %>%
plot(main = "Complete Linkage")
spotify %>% pull(Genre) %>% table
spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=3) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Complete Linkage")
dist.spotify <- spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Complete Linkage")
spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Complete Linkage")
spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Spotify Dendrogram")
ggplot(spotify %>% filter(Genre != "other"), aes(x = Liveness)) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
names(spotify)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Loudness)) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Loudness)) +
geom_histogram(bins = 5) +
facet_wrap(~ Genre, ncol = 1)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Speechiness)) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability, Popularity) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Spotify Dendrogram")
spotify %>%
filter(Genre != "other") %>%
select(Energy, Danceability, Popularity) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Spotify Dendrogram")
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Popularity)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Popularity)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre, shape = Energy)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre, size = Energy)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre, size = Energy/2)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre, size = Energy/20)) +
geom_density2d()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Popularity and Danceability by Genre",)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Popularity and Danceability by Genre")
knitr::opts_chunk$set(echo = FALSE)
# Load the required libraries
library(tidyverse)
library(pander)
library(gridExtra)
library(wordcloud)
library(tm)
library(ggseas)
library(dendextend)
library(devtools)
# install_github("vqv/ggbiplot")
# library(ggbiplot)
library(dplyr)
library(GGally)
spotify <- read.csv("spotify-2000.csv") # Load the data
# Easier column names
colnames(spotify)[1] <- "Index"
colnames(spotify)[6] <- "BPM"
colnames(spotify)[9] <- "Loudness"
colnames(spotify)[12] <- "Duration"
# Cleaning up the genres column
rock <- c("album rock", "alternative metal", "classic rock", "modern rock",
"alternative rock", "garage rock", "permanent wave", "modern folk rock",
"irish rock", "art rock", "celtic rock", "dutch rock", "belgian rock",
"british invasion", "finnish metal", "dutch metal", "soft rock", "dutch prog",
"dance rock", "mellow gold", "glam metal", "australian rock", "australian psych",
"rock-and-roll", "glam rock", "hard rock", "punk", "j-core", "australian
alternative rock", "yacht rock", "celtic punk", "classic canadian rock",
"cyberpunk", "classical rock", "christelijk", "canadian rock", "british
alternative rock", "german alternative rock")
pop <- c("alternative pop rock", "pop", "classic uk pop", "dance pop", "dutch pop",
"alternative dance", "german pop", "afropop", "disco", "danish pop rock",
"britpop", "neo mellow", "boy band", "hip pop", "australian pop", "canadian pop",
"bow pop", "acoustic pop", "candy pop", "operatic pop", "alternative pop",
"eurodance", "art pop", "uk pop", "brill building pop", "belgian pop",
"barbadian pop", "chamber pop", "indie pop", "electropop", "folk-pop",
"metropopolis", "irish pop", "australian dance", "nederpop", "danish pop",
"italian pop", "la pop", "baroque pop", "austropop", "ccm", "bubblegum pop",
"europop", "new wave pop", "german pop rock", "levenslied", "classic
italian pop", "pop punk")
country <- c("dutch americana", "arkansas country", "british folk", "blues rock",
"canadian folk", "contemporary country", "australian indie folk",
"indie anthem-folk", "australian americana", "classic country pop",
"folk", "alternative country")
indie <- c("dutch indie", "alaska indie", "icelandic indie")
hip_hop <- c("alternative hip top", "detroit hip hop", "east coast hip hop",
"dutch hip hop", "atl hip hop", "g funk", "gangster rap")
findDecade = function(x) {
ifelse(x >= 1950 && x <= 1969, "1950s-60s",
ifelse(x >= 1970 && x <= 1979, "1970s",
ifelse(x >= 1980 && x <= 1989, "1980s",
ifelse(x >= 1990 && x <= 1999, "1990s",
ifelse(x >= 2000 && x <= 2009, "2000s", "2010s")))))
}
findRange = function(x) {
ifelse(x >= 1950 && x <= 1989, "1950s-1980s", "1990s-2010s")
}
spotify$Decade = sapply(spotify$Year, FUN = findDecade)
spotify$Range = sapply(spotify$Year, FUN = findRange)
spotify = spotify %>%
mutate(Genre = ifelse(Top.Genre %in% rock, "rock",
ifelse(Top.Genre %in% pop, "pop",
ifelse(Top.Genre %in% country, "country",
ifelse(Top.Genre %in% indie, "indie",
ifelse(Top.Genre %in% hip_hop, "hiphop", "other")))))) %>%
mutate(Genre = factor(Genre),
Duration = as.integer(Duration),
Decade = factor(Decade),
Range = factor(Range))
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, color = "green")) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Danceability,
color = "green")) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity,
color = "green")) +
geom_histogram() +
facet_wrap(~ Genre, ncol = 1)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_histogram()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_density()
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_density(alpha = 0.3)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_density(alpha = 0.3)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Danceability, fill = Genre)) +
geom_density(alpha = 0.3)
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, fill = Genre)) +
geom_density(alpha = 0.3)
grid.arrange(
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Danceability, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, fill = Genre)) +
geom_density(alpha = 0.3)
)
names(spotify)
spotify %>%
filter(Genre != "other") %>%
select(BPM, Energy, Danceability, Loudness, Liveness, Valence, Duration,
Acousticness, Speechiness, Popularity) %>%
# select(Energy, Danceability, Popularity) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Spotify Dendrogram")
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Popularity and Danceability by Genre")
install_github("vqv/ggbiplot")
knitr::opts_chunk$set(echo = FALSE)
# Load the required libraries
library(tidyverse)
library(pander)
library(gridExtra)
library(wordcloud)
library(tm)
library(ggseas)
library(dendextend)
library(devtools)
#install_github("vqv/ggbiplot")
library(ggbiplot)
library(kableExtra)
install.packages("kableExtra")
# Load the required libraries
library(tidyverse)
library(pander)
library(gridExtra)
library(wordcloud)
library(tm)
library(ggseas)
library(dendextend)
library(devtools)
#install_github("vqv/ggbiplot")
library(ggbiplot)
library(kableExtra)
spotify <- read.csv("spotify-2000.csv") # Load the data
# Easier column names
colnames(spotify)[1] <- "Index"
colnames(spotify)[6] <- "BPM"
colnames(spotify)[9] <- "Loudness"
colnames(spotify)[12] <- "Duration"
# Cleaning up the genres column
rock <- c("album rock", "alternative metal", "classic rock", "modern rock",
"alternative rock", "garage rock", "permanent wave", "modern folk rock",
"irish rock", "art rock", "celtic rock", "dutch rock", "belgian rock",
"british invasion", "finnish metal", "dutch metal", "soft rock", "dutch prog",
"dance rock", "mellow gold", "glam metal", "australian rock", "australian psych",
"rock-and-roll", "glam rock", "hard rock", "punk", "j-core", "australian
alternative rock", "yacht rock", "celtic punk", "classic canadian rock",
"cyberpunk", "classical rock", "christelijk", "canadian rock", "british
alternative rock", "german alternative rock")
pop <- c("alternative pop rock", "pop", "classic uk pop", "dance pop", "dutch pop",
"alternative dance", "german pop", "afropop", "disco", "danish pop rock",
"britpop", "neo mellow", "boy band", "hip pop", "australian pop", "canadian pop",
"bow pop", "acoustic pop", "candy pop", "operatic pop", "alternative pop",
"eurodance", "art pop", "uk pop", "brill building pop", "belgian pop",
"barbadian pop", "chamber pop", "indie pop", "electropop", "folk-pop",
"metropopolis", "irish pop", "australian dance", "nederpop", "danish pop",
"italian pop", "la pop", "baroque pop", "austropop", "ccm", "bubblegum pop",
"europop", "new wave pop", "german pop rock", "levenslied", "classic
italian pop", "pop punk")
country <- c("dutch americana", "arkansas country", "british folk", "blues rock",
"canadian folk", "contemporary country", "australian indie folk",
"indie anthem-folk", "australian americana", "classic country pop",
"folk", "alternative country")
indie <- c("dutch indie", "alaska indie", "icelandic indie")
hip_hop <- c("alternative hip top", "detroit hip hop", "east coast hip hop",
"dutch hip hop", "atl hip hop", "g funk", "gangster rap")
findDecade = function(x) {
ifelse(x >= 1950 && x <= 1969, "1950s-60s",
ifelse(x >= 1970 && x <= 1979, "1970s",
ifelse(x >= 1980 && x <= 1989, "1980s",
ifelse(x >= 1990 && x <= 1999, "1990s",
ifelse(x >= 2000 && x <= 2009, "2000s", "2010s")))))
}
findRange = function(x) {
ifelse(x >= 1950 && x <= 1989, "1950s-1980s", "1990s-2010s")
}
spotify$Decade = sapply(spotify$Year, FUN = findDecade)
spotify$Range = sapply(spotify$Year, FUN = findRange)
spotify = spotify %>%
mutate(Genre = ifelse(Top.Genre %in% rock, "rock",
ifelse(Top.Genre %in% pop, "pop",
ifelse(Top.Genre %in% country, "country",
ifelse(Top.Genre %in% indie, "indie",
ifelse(Top.Genre %in% hip_hop, "hiphop", "other")))))) %>%
mutate(Genre = factor(Genre),
Duration = as.integer(Duration),
Decade = factor(Decade),
Range = factor(Range))
?grid.arrange
names(spotify)
grid.arrange(
ggplot(spotify %>% filter(Genre != "other"), aes(x = BPM, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Danceability, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Loudness, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Liveness, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Valence, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Duration, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Acousticness, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Speechiness, fill = Genre)) +
geom_density(alpha = 0.3),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, fill = Genre)) +
geom_density(alpha = 0.3),
nrow = 5
)
warnings()
spotify %>% filter(Genre == "other") %>% pull(Top.Genre) %>% table()
spotify %>% filter(Genre == "other") %>% pull(Top.Genre) %>% table %>% .[which(. != 0)]
spotify %>%
filter(Genre != "other") %>%
select(BPM, Energy, Danceability, Loudness, Liveness, Valence, Duration,
Acousticness, Speechiness, Popularity) %>%
# select(Energy, Danceability, Popularity) %>%
apply(MARGIN = 2, FUN = function(x) x/sd(x)) %>%
dist %>%
hclust(method = "complete") %>%
as.dendrogram %>%
set("branches_k_color", k=5) %>%
set("labels_colors", order_value = TRUE,
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "country", "brown",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "hiphop", "red",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "indie", "purple",
ifelse(spotify %>% filter(Genre != "other") %>% pull(Genre) == "pop", "green",
"blue"))))) %>%
plot(main = "Spotify Dendrogram")
legend("topright", col = c("blue", "green", "red", "brown", "purple"),
legend = c("Rock", "Pop", "Hip Hop", "Country", "Indie"), pch = 20, cex = 0.75,
ncol = 2, title = "Leaf Color")
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Danceability vs. Energy by Genre")
grid.arrange(
ggplot(spotify %>% filter(Genre != "other"), aes(x = BPM, y = Energy)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "BPM vs. Energy by Genre"),
ggplot(spotify %>% filter(Genre != "other"), aes(x = BPM, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "BPM vs. Danceability by Genre"),
ggplot(spotify %>% filter(Genre != "other"), aes(x = BPM, y = Valence)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "BPM vs. Valence by Genre"),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Energy vs. Danceability by Genre"),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Energy, y = Valence)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Energy vs. Valence by Genre"),
ggplot(spotify %>% filter(Genre != "other"), aes(x = Danceability, y = Valence)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Danceability vs. Valence by Genre"),
nrow = 3
)
knitr::opts_chunk$set(echo = TRUE)
ggplot(aes(x = c(65.6, 100-65.6))) + geom_bar()
library(tidyverse)
ggplot(aes(x = c(65.6, 100-65.6))) + geom_bar()
ggplot(aes(x = data.frame(65.6, 100-65.6))) +
geom_bar()
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(condition,value)
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
value <- abs(rnorm(1000 , 0 , 15))
data <- data.frame(condition,value)
ggplot(data, aes(fill=condition, y=value, x=1)) +
geom_bar(position="fill", stat="identity")
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
percentage <- abs(rnorm(1000 , 0 , 15))
data <- data.frame(condition,value)
ggplot(data, aes(fill=condition, y=value, x=1)) +
geom_bar(position="fill", stat="identity")
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
percentage <- abs(rnorm(1000 , 0 , 15))
data <- data.frame(condition,percentage)
ggplot(data, aes(fill=condition, y=percentage, x=1)) +
geom_bar(position="fill", stat="identity")
ggplot(data, aes(fill=condition, y=percentage, x=1)) +
geom_bar(position="fill", stat="identity", width=1)
ggplot(data, aes(fill=condition, y=percentage, x=1)) +
geom_bar(position="fill", stat="identity", width=0.1)
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
percentage <- abs(rnorm(1000 , 0 , 15))
data <- data.frame(condition,percentage)
ggplot(data, aes(fill=condition, y=percentage, x=1)) +
geom_bar(position="fill", stat="identity", width=0.1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
library(tidyverse)
condition <- c(rep("eat" , 656), rep("do not eat" , 344))
percentage <- abs(rnorm(1000 , 0 , 15))
data <- data.frame(condition,percentage)
ggplot(data, aes(fill=condition, y=percentage, x=1)) +
geom_bar(position="fill", stat="identity", width=0.1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(title = "Percentage of College Students that Eat Breakfast")
install.packages("shiny")
library(shiny); runApp('CMU/2021 Spring/36493/ex_app.R')
runApp('CMU/2021 Spring/36493/Golf-Sports-Analytics-Capstone')
install.packages("tidyverse")
runApp('CMU/2021 Spring/36493/Golf-Sports-Analytics-Capstone')
